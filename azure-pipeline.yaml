trigger:
  - master
  - release/*

pr:
  - master
  - release/*

parameters:
- name: vmImage
  type: string
  default: ubuntu-latest

stages:
- stage: Lint_Test
  pool:
    vmImage: ${{ parameters.vmImage }}
  condition: and(succeeded(), ne(variables['Build.Reason'], 'IndividualCI'))
  displayName: Lint and Test project
  jobs:
    - job: Lint
      displayName: Lint check the project
      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.7'
            addToPath: true
            architecture: 'x64'
          displayName: "User python 3.7"
        - script: |
            FILE=.pre-commit-config.yaml
            if ! test -f "$FILE"; then
                echo "$FILE does not exists. Exiting the pre-commit linting stage with success."
                exit 0
            fi
            echo "$FILE exists. Installing pre-commit"
            export SETUPTOOLS_USE_DISTUTILS=stdlib
            python --version
            pip install pre-commit
            pre-commit run --all-files
          displayName: "Checks for .pre-commit-config.yaml on project root, lint checking if it does"
    - job:
      dependsOn: Lint
      condition: succeeded()
      displayName: Test project
      steps:
      - task: DockerCompose@0
        displayName: 'Run tests on Docker Compose service'
        inputs:
          containerregistrytype: 'Container Registry'
          dockerComposeCommand: 'up --abort-on-container-exit tests'
      - publish: $(System.DefaultWorkingDirectory)
        artifact: s
        displayName: 'Send artifact to sonar'

- stage: Sonar
  pool:
    vmImage: ${{ parameters.vmImage }}
  condition: and(succeeded(), ne(variables['Build.Reason'], 'IndividualCI'))
  displayName: Sonar g
  jobs:
    - job:
      displayName: Sonar prepare, analyze an publish
      steps:
      - download: current
        artifact: s
        displayName: 'Get artifact from test'
      - task: SonarCloudPrepare@1
        displayName: 'Prepare analysis on SonarCloud'
        inputs:
          SonarCloud: SonarCloud
          organization: juntossomosmais
          scannerMode: CLI
      - task: SonarCloudAnalyze@1
        displayName: 'Run Code Analysis'
      - task: SonarCloudPublish@1
        displayName: 'Publish Quality Gate Result'
